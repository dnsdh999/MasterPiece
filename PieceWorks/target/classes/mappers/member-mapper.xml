<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
	<insert id="insertMember">
		insert into member
		values (#{email}, #{pwd}, #{name}, #{nickName}, #{phone}, sysdate, default, null, null, 0)
	</insert>
	
  	<select id="memberLogin" resultMap="memberResultSet">
  		select * 
  		from member
  		where email=#{email} and m_status='Y'
  	</select>
  	<resultMap type="Member" id="memberResultSet">
  		<id column="EMAIL" property="email"/>
  		<result column="PWD" property="pwd"/>
  		<result column="NAME" property="name"/>
  		<result column="NICKNAME" property="nickName"/>
  		<result column="PHONE" property="phone"/>
  		<result column="ENROLL_DATE" property="enroll_date"/>
  		<result column="M_STATUS" property="m_status"/>
  		<result column="ORIGINPROFILE" property="originProfile" />
  		<result column="REPROFILE" property="reProfile"/>
  		<result column="CURR_PNO" property="currPno"/>
  	</resultMap>
  
  	<resultMap type="Member" id="projectMemResultSet">
  		<id column="EMAIL" property="email"/>
  		<result column="NICKNAME" property="nickName"/>
  		<result column="REPROFILE" property="reProfile"/>
  	</resultMap>
  
  	<select id="selectProjectMemList" resultMap="projectMemResultSet">
  		select project_member as email, nickname, reprofile
  		from project_join join member on (email = project_member)
  		where project_no = #{projectNum} order by nickname
  	</select>
  	
  	<!-- 이메일 확인 -->
   	<select id="duplicateEmail" resultType="_int" >
  		select count(*)
  		from member
  		where email = #{email}
  	</select>
 
  	<update id="updateMember">
  		update member 
  		set
  			<if test="originProfile != null">
				originProfile = #{originProfile},
			</if>
  		 reProfile = #{reProfile}, name = #{name}, nickName = #{nickName}, phone = #{phone}
  		where email = #{email}
  	</update>
  	
  	<update id="deleteMember">
  		update member
  		set m_status = 'N'
  		where email = #{email}
  	</update>

  	<select id="searchEmail" resultMap="memberResultSet">
  		select email
  		from member
  		where name = #{name} and phone = #{phone} and m_status = 'Y'
  	</select>
  	
  	<select id="searchPwd" resultMap="memberResultSet">
  		select name, email
  		from member
  		where name = #{name} and email = #{email} and m_status = 'Y'
  	</select>
  	
  	<update id="updatePwd">
  		update member
  		set pwd = #{pwd}
  		where email = #{email}
  	</update>
  	
  	
  	<!--  댓글 작성   -->
	<select id="selectReplyWriter" resultMap="memberResultSet">
		select * 
		from member 
		where email in 
		<foreach collection="array" open="(" close=")" separator="," item="e"> 
			#{e} 
		</foreach>
	</select>
  	
</mapper>
